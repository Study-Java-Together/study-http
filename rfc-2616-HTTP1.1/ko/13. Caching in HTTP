	 HTTP는 보편적으로 분산된 정보 시스템을 위해 사용되는데, 이 시스템의 성능은 응답 캐시의 사용을 통해 
	 향상될 수 있다. HTTP/1.1 프로토콜은 캐싱 작동을 잘 수행하기 위한 몇가지 요소들을 포함하고 있다.
	 이 요소들은 프로토콜의 다른 측면들과 비교할 수 없고 그들 간에 상호작용을 하기 때문에 메소드, 헤더, 응답 코드등과는
   별개로 HTTP의 기본 캐싱 디자인을 설명하기 유용하다.

   캐시는 성능을 크게 개선시키지 못한다면 쓸모없을 것이다. HTTP/1.1의 캐시의 목표는 다양한 케이스에서 
   요청을 보내는 것을 제거하고, 전체 응답을 보내는 것을 제거하는 것이다. 전자는 많은 작업에서 필요한 
   네트워크 왕복을 줄이는 것이다. 이 목적을 위해 "만료" 매커니즘을 사용한다.(13.2)
   후자는 네트워크 대역폭을 줄여준다. 이를 위해 "검증"매커니즘을 사용한다.(13.3)

   성능, 가용성, 끊어진 작업에 대한 필요 조건은 의미적 투명성의 목적을 완화하도록 요구한다.
   HTTP/1.1 프로토콜은 원 서버들, 캐시, 클라이언트들이 필요할 때 명시적으로 투명성으로 감소시킬 수 
	 있도록 허용한다.

   그러나, 비투명한 작업은 전문가가 아닌 사용자들에게 혼란스러울 수 있고, 특정 서버 어플리케이션들과 호환되지 
   않을 수 있기 때문에 프로토콜은 투명성을 완화시킬 것을 요구한다.

      - 클라이언트 또는 원 서버에 의해 완화될 때 명시적 프로토콜 수준 요청에 의해서만 가능
			- 캐시 또는 클라이언트에 의해 완화될 때 최종 사용자에게 명시적인 경고가 있는 경우에만 가능

	 따라서 HTTP/1.1 프로토콜은 다음과 같은 중요한 요소들을 제공한다.

			1. 모든 참가원들이 요구할 때 완전한 의미 투명성을 제공하는 프로토콜 기능

			2. 원 서버 또는 유저 에이전트가 비투명성 작업을 분명하게 요청하고 컨트롤할 수 있도록 하는 프로토콜 기능

			3. 요청 된 의미 투명성의 근사값을 유지하지 않는 응답에 캐시가 경고를 첨부 할 수 있는 프로토콜 기능

   기본 규칙은 클라이언트가 어떤 잠재적인 의미 투명성의 완화도 감지할 수 있어야 한다는 것이다.
