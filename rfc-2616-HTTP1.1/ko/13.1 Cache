13.1.1 캐시의 정확성

정확한 캐시는 반드시 아래 조건 중 하나를 만족하며, 요구에 맞는 가장 최근에 캐시에 저장된 응답으로 응답해야한다.


      1. 원 서버의 응답을 재검증하여 원 서버가 반환했을 응답과 동일한지 확인했다.
				 
      2. "충분히 신선하다"는 기본적으로, 이것은 클라이언트, 원서버, 캐시가 최소한의 신선 필요 조건을 
	    만족한다는 것을 의미한다. (14.9) 원 서버가 그렇게 명시했다면, 신선 필요 조건일 뿐이다.

	    저장된 응답이 클라이언트와 원 서버 모두의 가장 제한적인 신선도 요구 사항으로 인해 
	   "충분히 새로 고침"되지 않은 경우 신중하게 고려 된 상황에서 캐시는 여전히 적절한 경고 헤더와 
	    함께 응답을 반환 할 수 있습니다 (13.1.5 및 14.46 참조) 그러한 응답이 금지되지 않는 한 
           (예를 들어, "비 저장"캐시 지시 또는 "비 캐시"캐시 요청 지시에 의해; 14.9 참조).

      3. 적절한 응답 메세지는 304 (Not Modified), 305 (Proxy Redirect),
         or error (4xx or 5xx) 이다.
	 캐시가 원서버와 통신할 수 없다면, 올바른 캐시는 위와 같이 응답해야한다, 만약에 그렇지 않다면 
	 통신 실패가 있었다는 에러나 경고를 반드시 리턴해야한다.
	 

만약 캐시가 일반적으로 요청하는 클라이언트에게 전달할 응답 (전체 응답 또는 304 응답)을 수신하고 수신 된 응답이 
더 이상 최신 상태가 아닌 경우 캐시는 요청하지 않고 요청 클라이언트에게 전달 해야 한다.
새로운 경고 추가 (기존 경고 헤더를 제거하지 않음). 캐시는 단순히 응답이 오래되었다는 이유로 응답을 
다시 시도해서는 안된다. 이로 인해 무한 루프가 발생할 수 있다. 
경고없이 오래된 응답을 수신 한 유저 에이전트는 사용자에게 경고 표시를 표시 할 수 있다.

13.1.2 경고

	 캐시가 직접적이지 않거나 "충분히 신선하다"는 응답을 반환할 때마다(13.1.1절의 조건 2)
   반드시 general 헤더를 사용하여 해당 효과에 대한 경고를 첨부해야 한다. 
	 경고 헤더와 현재 정의된 경고는 제14.46절에 설명되어 있다. 
	 경고는 클라이언트가 적절한 조치를 취할 수 있도록 한다.
		
	 ( first-hand : 응답이 원 서버로부터 직접적으로 온다는 뜻. )

	경고는 캐시 관련 및 기타 목적으로 사용될 수 있다.
	그렇지 않으면 오류 상태 코드가 아닌 경고의 사용은 이러한 응답을 실제 실패로부터 구별한다.

		경고에는 3자리 경고 코드가 할당된다. 
	  첫 번째 숫자는 성공적인 재검증 후 저장된 캐시 항목에서 경고가 삭제되어야 하는지 또는 
    삭제되지 않아야 하는지 여부를 가리킨다.

		1xx 응답의 최신 상태 또는 재확인 상태를 설명하는 경고이므로 재확인이 완료된 후에는 삭제해야한다.
    1XX 경고 코드는 캐시 된 항목을 확인할 때만 캐시에 의해 생성 될 수 있다.
		이것은 클라이언트에 의해서 생성되선 안된다.

		2xx 재확인에 의해 수정되지 않고 엔터티 본문 또는 엔터티 헤더의 일부 측면을 설명하는 경고로,
		 (예를 들어, 엔터티 본문의 손실 압축)
      유효성이 다시 확인 된 후에는 삭제해서는 안된다.

	 코드 자체의 정의는 14.46을 참조한다.

	 HTTP/1.0 캐시는 첫 번째 카테고리의 경고를 삭제하지 않고 응답의 모든 경고를 캐시한다. 
   HTTP/1.0 캐시에 전달된 응답의 경고에는 추가 경고 날짜 필드가 있으므로, 
   향후 HTTP/1.1 수신자가 잘못 캐시된 경고를 믿지 않도록 방지한다.

	 경고에도 경고문이 실려 있다. 텍스트는 적절한 자연어일 수 있으며
	(아마도 클라이언트의 Accept 헤더에 기초함), 사용되는 문자 집합에 대한 선택적 표시를 포함할 수 있다.

		동일한 코드 번호의 여러 경고를 포함하여 응답(원본 서버 또는 캐시에 의해)에 여러 개의 경고를
    첨부할 수 있다. 예를 들어, 서버는 영어와 바스크어로 된 텍스트와 동일한 경고를 제공할 수 있다.

	 응답에 여러 개의 경고가 첨부된 경우, 사용자에게 모든 경고를 표시하는 것이 실용적이지 않거나 
   합리적이지 않을 수 있다. 이 버전의 HTTP는 표시할 경고와 순서를 결정하기 위해 엄격한 우선 순위 규칙을 
   지정하지 않지만, 몇가지 발견법을 제안한다.

13.1.3 Cache-control 매커니즘

	 HTTP/1.1의 기본적인 캐시 매커니즘은 (서버가 명시한 유효 기간, 검증자) 캐시에 대한 내재된 지시를 하는것이다.
   몇몇 경우, 서버 또는 클라이언트는 내재된 지시들을 HTTP 캐시에 제공해야한다. 우리는 Cache-Control헤더를
	 이 목적으로 사용한다.

	 Cache-Control 헤더는 클라이언트나 서버가 요청이나 응답에서 다양한 지시사항을 전송할 수 있도록 한다. 
   이러한 지시사항은 일반적으로 기본 캐싱 알고리즘보다 우선한다. 일반적으로 헤더 값 사이에 명백한 충돌이 
   있을 경우 가장 제한적인 해석이 적용된다.(의미적 투명성을 보존할 가능성이 가장 높은 해석) 
   그러나, 어떤 경우에는 cache-control 지시사항이 의미적 투명성의 근사치를 약화시키는 것으로 
	 명시되어 있다(예: "max-stale" 또는 "public").

	 cache-control 지시사항은 14.9에 자세히 명시되어있다.

13.1.4 명백한 유저 에이전트 경고

		많은 유저 에이전트는 사용자가 기본 캐싱 메커니즘을 재정의하는 것을 가능하게 한다. 
    예를 들어, 유저 에이전트는 사용자가 캐시된 엔티티(명백히 낡은 것도)를 검증하지 않도록 명시하는 것을 허용할 수 있다. 
    또는 유저 에이전트는 모든 요청에 "Cache-Control: max-stale=3600"을 습관적으로 추가할 수 있다. 
    유저 에이전트는 투명하지 않은 동작이나 비정상적으로 비효율적인 캐싱을 초래하는 동작을 기본값으로 설정해서는 안 되지만 
    사용자의 명시적인 동작에 의해 그렇게 하도록 명시적으로 구성할 수 있다.

	 사용자가 기본 캐싱 메커니즘을 재정의한 경우, 서버의 투명성 요구 사항을 충족하지 못할 수 있는 정보가 표시될 때마다
	 (특히 표시된 엔티티가 오래된 것으로 알려진 경우) 유저 에이전트는 사용자에게 명시적으로 표시해야 한다. 
   프로토콜은 일반적으로 사용자 에이전트가 응답이 오래되었는지 여부를 판단할 수 있도록 하기 때문에, 
   이 표시가 실제로 발생할 때만 표시하면 된다. 표시는 대화 상자가 될 필요가 없으며 아이콘
   (예: 썩어가는 물고기의 사진) 또는 다른 표시가 될 수 있다.

		사용자가 캐시의 효과를 비정상적으로 감소시킬 수 있는 방식으로 캐싱 메커니즘을 재정의하는 경우, 
    유저 에이전트는 사용자가 부주의로 과도한 자원을 소비하거나 과도한 지연을 겪지 않도록 
    사용자에게 지속적으로 이 상태를 표시해야 한다. (예를 들어 화염 속의 지폐 사진)

13.1.5 규칙과 경고의 예외 사항

	 몇몇 경우에는, 캐시의 운영자는 클라이언트가 요청하지 않은 경우에도 오래된 응답을 반환하도록 캐시를 구성할 수 있다. 
   이 결정은 가볍게 내려서는 안 되며, 특히 캐시가 원 서버에 제대로 연결되지 않은 경우 가용성이나 성능상의 이유로 필요할 수 있다. 
   캐시가 오래된 응답을 반환할 때마다 클라이언트 소프트웨어가 잠재적인 문제가 있을 수 있음을 사용자에게 알릴 수 있도록 
   (경고 헤더를 사용하여) 이러한 응답을 표시해야 한다.

	 또한 유저 에이전트가 직접 또는 새로운 응답을 얻기 위한 조치를 취할 수 있도록 한다. 
   이러한 이유로 캐시는 기술적 또는 정책적 이유로 준수할 수 없는 경우가 아니라면 클라이언트가 
   명시적으로 직접 또는 새로운 응답을 요청하는 경우 오래된 응답을 반환해선 안된다.

13.1.6 클라이언트 제어 동작

	 원 서버(그리고 응답 연령에 대한 기여에 의한 중간 캐시)가 만료 정보의 주요 소스인 반면, 
   어떤 경우에는 클라이언트가 캐시된 응답을 검증하지 않고 반환할지 여부에 대한 캐시의 결정을 
   통제해야 할 수도 있다. 클라이언트는 Cache-Control 헤더의 몇 가지 지시사항을 사용하여 이 작업을 수행한다.

	 클라이언트의 요청은 검증되지 않은 응답에 대해 수용할 수 있는 최대 기간을 명시할 수 있다. 
   값을 0으로 지정하면 캐시가 모든 응답을 재검증하도록 한다. 
   또한 클라이언트는 응답이 만료되기 전까지 남은 최소 시간을 지정할 수 있다. 
   이 두 옵션 모두 캐시의 동작에 대한 제약을 증가시키므로 캐시의 의미적 투명성에 대한 근사치를 더 이상 완화할 수 없다.

	 클라이언트는 또한 최대 어떤 수준까지 오래된 응답을 수락하도록 지정할 수 있다. 
   캐시에 대한 제약이 완화되어 의미 투명성에 대한 원본 서버의 지정된 제약 조건을 위반할 수 있지만 
   연결이 끊긴 상황에서 연결이 끊긴 작업이나 높은 가용성을 지원하는 데 필요할 수 있다.
