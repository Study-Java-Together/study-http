13.2.1 서버가 명시한 만기일

  HTTP 캐싱은 캐시가 원 서버에 대한 요청을 완전히 피할 수 있을 때 가장 잘 작동한다. 
  요청을 피하기 위한 중요 메커니즘은 원 서버가 미래의 명시적인 만료 시간을 제공하는 것으로, 
  이것은 이 응답이 후속 요청을 만족시킨다는 것을 의미한다. 
  즉, 캐시는 먼저 서버에 접속하지 않고도 새로운 응답을 반환할 수 있다.

  우리의 기대는 엔티티가 만료시간에 도착하기 전에 의미적으로 변화하지 않을 것이란 믿음으로 
  미래의 만료 시간을 부여하는 것이다. 
  일반적으로 서버의 만료 시간을 신중하게 선택한 경우 의미 투명성을 유지한다.

  만료 메커니즘은 캐시에서 가져온 응답에만 적용되며 요청 클라이언트로 즉시 전달되는 
  응답에는 적용되지 않는다.

  원서버가 모든 요구를 검증하기 위해 의미상으로 투명한 캐시를 요구한다면 과거 시점의 유효 시간을
  부여할 수도 있다. 이는 응답이 항상 낡은 것이기 때문에 계속되는 요구에 이것을 사용하기 위해서는
  반드시 먼저 검증을 해야 한다는 것을 의미한다. 검증을 강제로 요구하는 제한적인 방법에 관한 추가
  정보는 14.9.4 절을 참조한다.
  원서버가 모든 요청을 검증하기 위해 의미상 투명한 캐시를 원한다면, 
  과거의 만료 시간을 부여할 수 있다. 응답이 항상 오래되었으므로 캐시는 후속 요청에 
  사용하기 전에 응답을 검증해야 한다. 14.9.4에 검증을 강제로 요구하는 제한적인 방법에 대한 설명이 있다.

  원서버가 HTTP/1.1 캐시를 어떻게 구성하든 모든 요청의 유효성을 확인하도록 하려면 
  "필수 재검증" 캐시 제어 지시어를 사용해야 한다(14.9 참조).

  서버는 만료 헤더 또는 캐시-제어 헤더의 최대 사용 기간 지시어를 사용하여 
  명시적 만료 시간을 지정한다.

  만료 시간은 사용자 에이전트가 디스플레이를 새로 고치거나 리소스를 다시 로드하도록 
  강제하는 데 사용할 수 없으며, 그 의미는 캐싱 메커니즘에만 적용되며, 
  이러한 메커니즘은 해당 리소스에 대한 새로운 요청이 시작될 때만 자원의 만료 상태를 
  점검하면 된다. 캐시와 기록 메커니즘의 차이에 대한 설명은 섹션 13.13을 참고한다.
